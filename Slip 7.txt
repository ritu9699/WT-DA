@Slip-7

Q. 1) Write a PHP script to read “Movie.xml” file and print all MovieTitle and ActorName of file using 
OMDocument Parser. “Movie.xml” file should contain following information with at least 5 records 
Wth values. M vieInfoMovieNo, MovieTitle, ActorName ,ReReleaseYear.
Ans:

Php file

<?php
// Load the XML file
$xml = new DOMDocument();
$xml->load(‘Movie.xml’);

// Get all the movie nodes
$movies = $xml->getElementsByTagName(‘MovieInfo’);

// Loop through each movie node and print the movie title and actor name

Foreach ($movies as $movie) {
    Echo “Movie Title: “ . $movie->getElementsByTagName(‘MovieTitle’)[0]->textContent . “, “;
    Echo “Actor Name: “ . $movie->getElementsByTagName(‘ActorName’)[0]->textContent . “<br>”;
}
?>


XML file

<?xml version=”1.0”?>
<MovieList>
    <MovieInfo>
        <MovieNo>1</MovieNo>
        <MovieTitle>The Shawshank Redemption</MovieTitle>
        <ActorName>Tim Robbins</ActorName>
        <ReleaseYear>1994</ReleaseYear>
    </MovieInfo>
    <MovieInfo>
        <MovieNo>2</MovieNo>
        <MovieTitle>The Godfather</MovieTitle>
        <ActorName>Marlon Brando</ActorName>
        <ReleaseYear>1972</ReleaseYear>
    </MovieInfo>
    <MovieInfo>
        <MovieNo>3</MovieNo>
        <MovieTitle>The Dark Knight</MovieTitle>
        <ActorName>Christian Bale</ActorName>
        <ReleaseYear>2008</ReleaseYear>
    </MovieInfo>
    <MovieInfo>
        <MovieNo>4</MovieNo>
        <MovieTitle>The Godfather: Part II</MovieTitle>
        <ActorName>Al Pacino</ActorName>
        <ReleaseYear>1974</ReleaseYear>
    </MovieInfo>
    <MovieInfo>
        <MovieNo>5</MovieNo>
        <MovieTitle>12 Angry Men</MovieTitle>
        <ActorName>Henry Fonda</ActorName>
        <ReleaseYear>1957</ReleaseYear>
    </MovieInfo>
</MovieList>


Q. 2)Download the Market basket dataset. Write a python program to read the dataset and display its 
Information. Preprocess the data (drop null values etc.) Convert the categorical values into numeric 
Format. Apply the apriori algorithm on the above dataset to generate the frequent itemsets and association 
Rules. .

Ans:

Import pandas as pd
From mlxtend.preprocessing import TransactionEncoder
From mlxtend.frequent_patterns import apriori, association_rules

# read the dataset
Df = pd.read_csv(‘Market_Basket_Optimisation.csv’, header=None)

# drop null values
Df.dropna(inplace=True)

# convert categorical values to numeric using one-hot encoding
Te = TransactionEncoder()
Te_ary = te.fit(df.values).transform(df.values)
Df = pd.DataFrame(te_ary, columns=te.columns_)

# generate frequent itemsets using apriori algorithm
Frequent_itemsets = apriori(df, min_support=0.01, use_colnames=True)

# generate association rules from frequent itemsets
Rules = association_rules(frequent_itemsets, metric=”lift”, min_threshold=1)

# display information
Print(“Original Dataset:\n”)
Print(df.head())
Print(“\nFrequent Itemsets:\n”)
Print(frequent_itemsets)
Print(“\nAssociation Rules:\n”)
Print(rules)
