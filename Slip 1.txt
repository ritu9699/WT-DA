Q. 1) Write a PHP script to keep track of number of times the web page has been accessed (Use Session 
Tracking).

Ans:

<?php
Session_start();

If(isset($_SESSION[‘pcount])) {
  $_SESSION[‘pcount] += 1;
} else {
  $_SESSION[‘pcount] = 1;
}

Echo “You have visited this page “.$_SESSION[‘pcount].” Time(s).”;
?>


Q. 2)Create ‘Position_Salaries’ Data set. Build a linear regression model by identifying independent and 
Target variable. Split the variables into training and testing sets. Then divide the training and testing sets 
Into a 7:3 ratio, respectively and print them. Build a simple linear regression model.

Ans:
Import numpy as np
Import pandas as pd
From sklearn.model_selection import train_test_split
From sklearn.linear_model import LinearRegression

# Create the Position_Salaries dataset
Data = {‘Position’: [‘CEO’, ‘charman’, ‘director’, ‘Senior Manager’, ‘Junior Manager’, ‘Intern’], 
        ‘Level’: [1, 2, 3, 4, 5, 6], 
        ‘Salary’: [50000, 80000, 110000, 150000, 200000, 250000]}
Df = pd.DataFrame(data)

# Identify the independent and target variables
X = df.iloc[:, 1:2].values
Y = df.iloc[:, 2].values

# Split the variables into training and testing sets with a 7:3 ratio
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

# Print the training and testing sets
Print(“X_train:\n”, X_train)
Print(“y_train:\n”, y_train)
Print(“X_test:\n”, X_test)
Print(“y_test:\n”, y_test)

# Build a simple linear regression model
Regressor = LinearRegression()
Regressor.fit(X_train, y_train)

# Print the coefficients and intercept
Print(“Coefficients:”, regressor.coef_)
Print(“Intercept:”, regressor.intercept_)

___________


import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Creating Position_Salaries dataset
positions = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]).reshape(-1, 1)
salaries = np.array([45000, 50000, 60000, 80000, 110000, 150000, 200000, 300000, 500000, 1000000])

# Combine positions and salaries into a DataFrame
data = pd.DataFrame(data=np.concatenate((positions, salaries.reshape(-1,1)), axis=1), columns=['Position', 'Salary'])

# Identify independent and target variables
X = data[['Position']]  # Independent variable
y = data['Salary']      # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Print the training and testing sets
print("Training Set:")
print(X_train)
print(y_train)
print("\nTesting Set:")
print(X_test)
print(y_test)

# Build a simple linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Print the coefficients of the linear regression model
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)