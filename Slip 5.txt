Q. 1) Create XML file named “Item.xml”with item-name, item-rate, item quantity Store the details of 5 
Items of different Types.

Ans:

Item.xml
<items>
  <item type=”Electronics”>
    <name>Television</name>
    <rate>500</rate>
    <quantity>10</quantity>
  </item>
  <item type=”Clothing”>
    <name>Shirt</name>
    <rate>50</rate>
    <quantity>20</quantity>
  </item>
  <item type=”Grocery”>
    <name>Rice</name>
    <rate>40</rate>
    <quantity>30</quantity>
  </item>
  <item type=”Books”>
    <name>Harry Potter and the Philosopher’s Stone</name>
    <rate>20</rate>
    <quantity>50</quantity>
  </item>
  <item type=”Sports”>
    <name>Football</name>
    <rate>100</rate>
    <quantity>5</quantity>
  </item>
</items>


Q. 2)Use the iris dataset. Write a Python program to view some basic statistical details like percentile, 
Mean, std etc. Of the species of ‘Iris-setosa’, ‘Iris-versicolor’ and ‘Iris-virginica’. Apply logistic regression 
On the dataset to identify different species (setosa, versicolor, verginica) of Iris flowers given just 4 
Features: sepal and petal lengths and widths.. Find the accuracy of the model. 
Ans:

Import pandas as pd
From sklearn.datasets import load_iris
From sklearn.linear_model import LogisticRegression
From sklearn.model_selection import train_test_split
From sklearn.metrics import accuracy_score

# load the iris dataset
Iris = load_iris()

# create a dataframe from the dataset
Df = pd.DataFrame(iris.data, columns=iris.feature_names)
Df[‘target’] = iris.target

# view basic statistical details of the different species
Print(“Statistical details of Iris-setosa:”)
Print(df[df[‘target’]==0].describe())

Print(“Statistical details of Iris-versicolor:”)
Print(df[df[‘target’]==1].describe())

Print(“Statistical details of Iris-virginica:”)
Print(df[df[‘target’]==2].describe())

# split the data into training and testing sets
X = df.iloc[:,:-1]
Y = df.iloc[:, -1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# fit a logistic regression model
Logreg = LogisticRegression()
Logreg.fit(X_train, y_train)

# make predictions on the test set
Y_pred = logreg.predict(X_test)

# calculate the accuracy of the model
Accuracy = accuracy_score(y_test, y_pred)
Print(“Accuracy of the logistic regression model:”, accuracy)
