@Slip-8

Q. 1) Write a JavaScript to display message ‘Exams are near, have you started preparing for?’ (usealert
Box ) and Accept any two numbers from user and display addition of two number .(Use Prompt and 
Confirm box)
AAAns:
// Display message using alert box
Alert(‘Exams are near, have you started preparing for?’);

// Accept two numbers from user using prompt and confirm boxes
Let num1 = prompt(‘Enter first number:’);
Let num2 = prompt(‘Enter second number:’);
Let confirmMsg = `Are you sure you want to add ${num1} and ${num2}?`;

// Show confirmation message to user using confirm box
Let confirmResult = confirm(confirmMsg);

// If user confirms, then perform addition and display the result
If (confirmResult) {
  Num1 = parseInt(num1);
  Num2 = parseInt(num2);
  Let sum = num1 + num2;
  Alert(`The sum of ${num1} and ${num2} is ${sum}.`);
}

Q. 2)Download the groceries dataset. Write a python program to read the dataset and display its 
Information. Preprocess the data (drop null values etc.) Convert the categorical values into numeric 
Format. Apply the apriori algorithm on the above dataset to generate the frequent itemsets and association 
Rules.
Ans:

Import pandas as pd
From mlxtend.preprocessing import TransactionEncoder
From mlxtend.frequent_patterns import apriori, association_rules

# Load the dataset
Df = pd.read_csv(‘market_basket.csv’)

# Drop any rows with null values
Df.dropna(inplace=True)

# Convert categorical values to numeric format
Te = TransactionEncoder()
Te_ary = te.fit(df.values).transform(df.values)
Df = pd.DataFrame(te_ary, columns=te.columns_)

# Generate frequent itemsets
Frequent_itemsets = apriori(df, min_support=0.01, use_colnames=True)

# Generate association rules
Rules = association_rules(frequent_itemsets, metric=”lift”, min_threshold=1)

# Display information about the dataset
Print(“Dataset information:”)
Print(df.info())

# Display the frequent itemsets
Print(“\nFrequent itemsets:”)
Print(frequent_itemsets)

# Display the association rules
Print(“\nAssociation rules:”)
Print(rules)
